// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	"github.com/Q-n-A/Q-n-A/repository"
	"github.com/Q-n-A/Q-n-A/repository/gorm2"
	"github.com/Q-n-A/Q-n-A/server"
	"github.com/google/wire"
)

import (
	_ "net/http/pprof"
)

// Injectors from serve_wire.go:

func setupServer(config *Config) (*server.Server, error) {
	serverConfig := provideServerConfig(config)
	gorm2Config := provideRepositoryConfig(config)
	logger := newLogger(config)
	gormRepository, err := gorm2.NewGormRepository(gorm2Config, logger)
	if err != nil {
		return nil, err
	}
	db, err := gorm2.GetSqlDB(gormRepository)
	if err != nil {
		return nil, err
	}
	serverServer, err := server.InjectServer(serverConfig, db, logger)
	if err != nil {
		return nil, err
	}
	return serverServer, nil
}

// serve_wire.go:

var serverSet = wire.NewSet(
	newLogger,

	provideRepositoryConfig, gorm2.NewGormRepository, wire.Bind(new(repository.Repository), new(*gorm2.Gorm2Repository)), gorm2.GetSqlDB, provideServerConfig, server.InjectServer,
)
